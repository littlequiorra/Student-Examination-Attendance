package my.edu.utem.ftmk.dad.StudentExaminationAttendance.model;

import java.time.LocalDateTime;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.PrePersist;
import jakarta.persistence.Table;

/**
 * The class represents the Attendance entity in the database.
 * 
 * 
 * @author atiqaidayu
 * 
 */
@Entity
@Table(name = "attendance")
public class Attendance {

    // Primary key for the Attendance entity, auto-generated by the database.
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "AttendId")
    private int attendanceId;

    // Many-to-one relationship with the Examination entity.
    @ManyToOne
    @JoinColumn(name = "ExamId")
    private Examination examination;

    // Many-to-one relationship with the Student entity.
    @ManyToOne
    @JoinColumn(name = "StdId")
    private Student student;

    // Date and time of attendance.
    @Column(name = "AttendTime")
    private LocalDateTime time;

    // Type of attendance (e.g., "QR CODE" or "FINGER PRINT").
    @Column(name = "AttendType")
    private String type;

    /**
     * PrePersist method is automatically called 
     * before saving to the database to set the attendTime.
     * 
     */
    @PrePersist
    public void prePersist() {
        time = LocalDateTime.now();
    }

    /**
     * Default constructor for the Attendance entity.
     * 
     */
    public Attendance() {
        // Initialize any necessary variables or perform other setup tasks
    }

    // Getter and Setter methods for class members.

    /**
     * Getter for the attendance ID.
     * @return The unique identifier for the attendance.
     * 
     */
    public int getAttendId() {
        return attendanceId;
    }

    /**
     * Setter for the attendance ID.
     * @param attendanceId 
     * The unique identifier for the attendance.
     * 
     */
    public void setAttendId(int attendanceId) {
        this.attendanceId = attendanceId;
    }

    /**
     * Getter for the associated Examination entity.
     * @return The associated Examination entity.
     * 
     */
    public Examination getExamination() {
        return examination;
    }

    /**
     * Setter for the associated Examination entity.
     * @param examination 
     * The Examination entity to associate with the attendance.
     * 
     */
    public void setExamination(Examination examination) {
        this.examination = examination;
    }

    /**
     * Getter for the associated Student entity.
     * @return The associated Student entity.
     * 
     */
    public Student getStudent() {
        return student;
    }

    /**
     * Setter for the associated Student entity.
     * @param student 
     * The Student entity to associate with the attendance.
     */
    public void setStudent(Student student) {
        this.student = student;
    }

    /**
     * Getter for the date and time of attendance.
     * @return The date and time of attendance.
     * 
     */
    public LocalDateTime getAttendTime() {
        return time;
    }

    /**
     * Setter for the date and time of attendance.
     * @param time 
     * The date and time of attendance.
     * 
     */
    public void setAttendTime(LocalDateTime time) {
        this.time = time;
    }

    /**
     * Getter for the type of attendance (e.g., "QR CODE" or "FINGER PRINT").
     * @return The type of attendance.
     * 
     */
    public String getAttendType() {
        return type;
    }

    /**
     * Setter for the type of attendance (e.g., "QR CODE" or "FINGER PRINT").
     * @param type 
     * The type of attendance.
     * 
     */
    public void setAttendType(String type) {
        this.type = type;
    }
}
