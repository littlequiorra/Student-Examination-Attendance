package my.edu.utem.ftmk.dad.StudentExaminationAttendance.model;

import java.time.LocalDateTime;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

/**
 * This class represents the Examination entity in the database.
 * 
 * 
 * @author atiqaidayu
 * 
 */
@Entity
@Table(name = "examination")
public class Examination {

    // Primary key for the Examination entity, auto-generated by the database.
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ExamId")
    private int examId;

    // Many-to-one relationship with Course entity.
    @ManyToOne
    @JoinColumn(name = "CourseId")
    private Course course;

    // Many-to-one relationship with Venue entity.
    @ManyToOne
    @JoinColumn(name = "VenueId")
    private Venue venue;

    // Date and time of the examination.
    private LocalDateTime dateTime;

    // Many-to-one relationship with AcademicStaff entity.
    @ManyToOne
    @JoinColumn(name = "StaffId")
    private AcademicStaff invigilator;

    /**
     * Default constructor for the Examination entity.
     */
    public Examination() {
        // Initialize any necessary variables or perform other setup tasks
    }
    
    // New constructor accepting int for examId
    public Examination(int examId) {
        this.examId = examId;
    }
    // Getter and Setter methods for class members.

    /**
     * Getter for the examId.
     * @return The unique identifier for the examination.
     * 
     */
    public int getExamId() {
        return examId;
    }

    /**
     * Setter for the examId.
     * @param examId 
     * The unique identifier for the examination.
     * 
     */
    public void setExamId(int examId) {
        this.examId = examId;
    }

    /**
     * Getter for the associated Course entity.
     * @return The associated Course entity.
     * 
     */
    public Course getCourse() {
        return course;
    }

    /**
     * Setter for the associated Course entity.
     * @param course 
     * The Course entity to associate with the examination.
     * 
     */
    public void setCourse(Course course) {
        this.course = course;
    }

    /**
     * Getter for the associated Venue entity.
     * @return The associated Venue entity.
     * 
     */
    public Venue getVenue() {
        return venue;
    }

    /**
     * Setter for the associated Venue entity.
     * @param venue 
     * The Venue entity to associate with the examination.
     * 
     */
    public void setVenue(Venue venue) {
        this.venue = venue;
    }

    /**
     * Getter for the date and time of the examination.
     * @return The date and time of the examination.
     * 
     */
    public LocalDateTime getDateTime() {
        return dateTime;
    }

    /**
     * Setter for the date and time of the examination.
     * @param dateTime 
     * The date and time of the examination.
     * 
     */
    public void setDateTime(LocalDateTime dateTime) {
        this.dateTime = dateTime;
    }

    /**
     * Getter for the associated AcademicStaff entity (Examination invigilator)
     * @return The associated AcademicStaff entity (Examination invigilator)
     * 
     */
    public AcademicStaff getInvigilator() {
        return invigilator;
    }

    /**
     * Setter for the associated AcademicStaff entity (Examination invigilator)
     * @param invigilator 
     * The AcademicStaff entity to associate with the examination.
     * 
     */
    public void setInvigilator(AcademicStaff invigilator) {
        this.invigilator = invigilator;
    }
}
