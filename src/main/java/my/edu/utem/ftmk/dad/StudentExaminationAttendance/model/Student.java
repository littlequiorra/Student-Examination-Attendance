package my.edu.utem.ftmk.dad.StudentExaminationAttendance.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

/**
 * This class represents the Student entity in the database.
 * 
 * 
 * @author irdinafarisya
 * 
 */
@Entity
@Table(name = "student")
public class Student {

    // Primary key for the Student entity, auto-generated by the database.
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "StdId")
    private int studentId;

    // Matric number of the student.
    @Column(name = "MatricNo")
    private String matricNo;

    // Name of the student.
    @Column(name = "StdName")
    private String name;

    // Programme of study for the student.
    @Column(name = "Programme")
    private String programme;

    // Email address of the student.
    @Column(name = "StdEmail")
    private String email;

    // Phone number of the student.
    @Column(name = "StdPhoneNo")
    private String phoneNo;

    // Many-to-one relationship with AcademicStaff entity 
    @ManyToOne
    @JoinColumn(name = "StaffId")
    private AcademicStaff academicAdvisor;

    // Many-to-one relationship with Course entity (Course taken by the student)
    @ManyToOne
    @JoinColumn(name = "CourseId")
    private Course course;

    /**
     * Default constructor for the Student entity.
     * 
     */
    public Student() {
        // Initialize any necessary variables or perform other setup tasks
    }
    
    // New constructor accepting int for studentId
    public Student(int studentId) {
        this.studentId = studentId;
    }

    // Getter and Setter methods for class members.

    /**
     * Getter for the student ID.
     * @return The unique identifier for the student.
     * 
     */
    public int getStdId() {
        return studentId;
    }

    /**
     * Setter for the student ID.
     * @param studentId 
     * The unique identifier for the student.
     * 
     */
    public void setStdId(int studentId) {
        this.studentId = studentId;
    }

    /**
     * Getter for the matric number of the student.
     * @return The matric number of the student.
     * 
     */
    public String getMatricNo() {
        return matricNo;
    }

    /**
     * Setter for the matricnumber of the student.
     * @param matricNo 
     * The matric number of the student.
     */
    public void setMatricNo(String matricNo) {
        this.matricNo = matricNo;
    }

    /**
     * Getter for the name of the student.
     * @return The name of the student.
     * 
     */
    public String getStdName() {
        return name;
    }

    /**
     * Setter for the name of the student.
     * @param name 
     * The name of the student.
     * 
     */
    public void setStdName(String stdName) {
        this.name = stdName;
    }

    /**
     * Getter for the programme of study for the student.
     * @return The programme of study for the student.
     * 
     */
    public String getProgramme() {
        return programme;
    }

    /**
     * Setter for the programme of study for the student.
     * @param programme 
     * The programme of study for the student.
     * 
     */
    public void setProgramme(String programme) {
        this.programme = programme;
    }

    /**
     * Getter for the email address of the student.
     * @return The email address of the student.
     * 
     */
    public String getStdEmail() {
        return email;
    }

    /**
     * Setter for the email address of the student.
     * @param email 
     * The email address of the student.
     * 
     */
    public void setStdEmail(String stdEmail) {
        this.email = stdEmail;
    }

    /**
     * Getter for the phone number of the student.
     * @return The phone number of the student.
     * 
     */
    public String getStdPhoneNo() {
        return phoneNo;
    }

    /**
     * Setter for the phone number of the student.
     * @param phoneNo 
     * The phone number of the student.
     * 
     */
    public void setStdPhoneNo(String phoneNo) {
        this.phoneNo = phoneNo;
    }

    /**
     * Getter for the associated AcademicStaff entity 
     * @return The associated AcademicStaff entity (Student's academic advisor)
     * 
     */
    public AcademicStaff getAcademicAdvisor() {
        return academicAdvisor;
    }

    /**
     * Setter for the associated AcademicStaff entity
     * @param academicAdvisor 
     * The AcademicStaff entity to associate with the student.
     * 
     */
    public void setAcademicAdvisor(AcademicStaff academicAdvisor) {
        this.academicAdvisor = academicAdvisor;
    }

    /**
     * Getter for the associated Course entity (Course taken by the student)
     * @return The associated Course entity.
     * 
     */
    public Course getCourse() {
        return course;
    }

    /**
     * Setter for the associated Course entity (Course taken by the student)
     * @param course The Course entity to associate with the student
     * 
     */
    public void setCourse(Course course) {
        this.course = course;
    }
}
